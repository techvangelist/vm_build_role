---
# tasks file for vm_build---
- name: get VM disks
  command: "ls {{ vm_location }}"
  register: disks
  changed_when: "disks.rc != 0"

- name: Output disks variable
  debug:
    var: disks.stdout_lines

- name: create disk
  command: >
           virt-builder --format qcow2 {{ item.value.os_ver }}
           --selinux-relabel -o {{ vm_location}}/{{ item.key }}.{{ item.value.file_type }}
           --size {{ item.value.size }} --root-password password:{{ root_pass }}
  when: item.key not in disks.stdout
  loop: "{{ guests|dict2items }}"

- name: get list of VMs
  virt:
    command: "list_vms"
  register: vms_built

- name: Output vms_built variable
  debug:
    var: vms_built

- name: create vm
  command: >
            virt-install --import --name {{ item.key }} --network bridge={{ item.value.ntwk }},model=virtio
            --memory {{ item.value.mem }} --vcpus {{ item.value.cpus }}
            --disk {{ vm_location }}/{{ item.key }}.{{ item.value.file_type }}
            --noautoconsole --graphics vnc --os-variant {{ item.value.os_type }}
  when: item.key not in vms_built.list_vms
  loop: "{{ guests|dict2items }}"

- name: start vm
  virt:
    name: "{{ item.key }}"
    state: running
  loop: "{{ guests|dict2items }}"

- name: get list of VMs installed
  virt:
    command: "list_vms"
  register: vms_installed

- name: Output vms variable
  debug:
    var: vms_installed

